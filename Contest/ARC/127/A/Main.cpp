#include <iostream>

int64_t F(int64_t n, int64_t d, int64_t d0)
{
	int64_t sum = 0;
	if (n >= d)
	{
		const int64_t m = std::min<int64_t>(n, d + d0 - 1);
		// std::cout << "n: " << n << ", d: " << d << ", d0: " << d0 << ", m: " << m << std::endl; 
		sum += m - d + 1;
	}

	if ((d % 10) == 0)
	{
		sum += F(n, d / 10, d0 / 10);
	}
	return sum;
}

int main()
{
	int64_t n;
	std::cin >> n;
	// std::cout << n << std::endl;

	int64_t sum = 0;

	sum += F(n, 1000000000000000, 1000000000000000);
	sum += F(n, 1100000000000000,  100000000000000);
	sum += F(n, 1110000000000000,   10000000000000);
	sum += F(n, 1111000000000000,    1000000000000);
	sum += F(n, 1111100000000000,     100000000000);
	sum += F(n, 1111110000000000,      10000000000);
	sum += F(n, 1111111000000000,       1000000000);
	sum += F(n, 1111111100000000,        100000000);
	sum += F(n, 1111111110000000,         10000000);
	sum += F(n, 1111111111000000,          1000000);
	sum += F(n, 1111111111100000,           100000);
	sum += F(n, 1111111111110000,            10000);
	sum += F(n, 1111111111111000,             1000);
	sum += F(n, 1111111111111100,              100);
	sum += F(n, 1111111111111110,               10);
	sum += F(n, 1111111111111111,                1);

	std::cout << sum << std::endl;
	return 0;
}
